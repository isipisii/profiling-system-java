/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.informationsystem;

import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author paulm
 */
public class RegistrationForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form RegistrationForm
     */
    
    Resident resident = new Resident();
    Connection connection;
    PreparedStatement pst;
    ResultSet resultSet;
    
    private boolean exist = false; 
    
    public RegistrationForm() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        updateTable();
    }
    
    public void clear() { //clear the text fields
        txtf_FullName.requestFocus();
        txtf_FullName.setText("");
        txtf_Age.setText("");
        txtf_Purok.setText("");
    }
    
    public void updateTable(){ //updates the table
        int c;
        
        try {
            
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            connection = DriverManager.getConnection("jdbc:ucanaccess://C:/Users/Alessandro/Informations.accdb");
            pst = connection.prepareStatement("select * from RegisteredData");
            resultSet = pst.executeQuery();

            ResultSetMetaData rsmd = resultSet.getMetaData();
            c = rsmd.getColumnCount();
            DefaultTableModel dftm = (DefaultTableModel)tbl_Data.getModel();
            dftm.setRowCount(0);
            
            while(resultSet.next()){
                
                Vector v2 = new Vector();
                
                for(int i = 0; i <= c; i++){
                    v2.add(resultSet.getInt("ID"));
                    v2.add(resultSet.getString("name"));
                    v2.add(resultSet.getString("baranggay"));
                    v2.add(resultSet.getInt("age"));
                    v2.add(resultSet.getString("sex"));
                    v2.add(resultSet.getString("agecat"));
                    
                }
               
                dftm.addRow(v2);
            }
         
        }
         catch (ClassNotFoundException ex) {
            Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(this,ex);
             
        } catch (SQLException ex) {
            Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,ex);
            System.out.println(ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btn_Delete = new javax.swing.JButton();
        btn_Add = new javax.swing.JButton();
        btn_Update = new javax.swing.JButton();
        lbl_FullName = new javax.swing.JLabel();
        txtf_FullName = new javax.swing.JTextField();
        lbl_Purok = new javax.swing.JLabel();
        txtf_Purok = new javax.swing.JTextField();
        lbl_Age = new javax.swing.JLabel();
        txtf_Age = new javax.swing.JTextField();
        lbl_Sex = new javax.swing.JLabel();
        cmb_Sex = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Data = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(800, 600));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "REGISTER", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 12))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_Delete.setBackground(new java.awt.Color(255, 0, 0));
        btn_Delete.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btn_Delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_Delete.setText("Delete");
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btn_Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 190, 40));

        btn_Add.setBackground(new java.awt.Color(0, 153, 0));
        btn_Add.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btn_Add.setForeground(new java.awt.Color(255, 255, 255));
        btn_Add.setText("Add");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });
        jPanel2.add(btn_Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 190, 40));

        btn_Update.setBackground(new java.awt.Color(33, 178, 169));
        btn_Update.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btn_Update.setForeground(new java.awt.Color(255, 255, 255));
        btn_Update.setText("Update");
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });
        jPanel2.add(btn_Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 190, 40));

        lbl_FullName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lbl_FullName.setText("Full Name:");
        jPanel2.add(lbl_FullName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        txtf_FullName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtf_FullName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtf_FullNameActionPerformed(evt);
            }
        });
        jPanel2.add(txtf_FullName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 190, 30));

        lbl_Purok.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lbl_Purok.setText("Baranggay:");
        jPanel2.add(lbl_Purok, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        txtf_Purok.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtf_Purok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtf_PurokActionPerformed(evt);
            }
        });
        jPanel2.add(txtf_Purok, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 190, 30));

        lbl_Age.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lbl_Age.setText("Age:");
        jPanel2.add(lbl_Age, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, 20));

        txtf_Age.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jPanel2.add(txtf_Age, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 190, 30));

        lbl_Sex.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lbl_Sex.setText("Sex:");
        jPanel2.add(lbl_Sex, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        cmb_Sex.setFont(new java.awt.Font("SansSerif", 0, 12));
        cmb_Sex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Male", "Female" }));
        cmb_Sex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_SexActionPerformed(evt);
            }
        });
        jPanel2.add(cmb_Sex, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 190, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 250, 470));

        tbl_Data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Baranggay", "Age", "Sex", "Age Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_Data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_DataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_Data);
        if (tbl_Data.getColumnModel().getColumnCount() > 0) {
            tbl_Data.getColumnModel().getColumn(0).setPreferredWidth(12);
            tbl_Data.getColumnModel().getColumn(3).setPreferredWidth(15);
            tbl_Data.getColumnModel().getColumn(4).setPreferredWidth(12);
            tbl_Data.getColumnModel().getColumn(5).setPreferredWidth(20);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 500, 410));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
        String sex;
        
        resident.setName(txtf_FullName.getText());
        int selectedIndex = cmb_Sex.getSelectedIndex();
        sex = (String) cmb_Sex.getModel().getElementAt(selectedIndex);
        resident.setSex(sex);
        resident.setBaranggay(txtf_Purok.getText());
        resident.setAge(parseInt(txtf_Age.getText()));
        
        
        
        checkPersonIfExist();
        
        if(doesExist() == true){
             JOptionPane.showMessageDialog(this,"This person is already registered");
        } else {
             try {
                 
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");

                connection = DriverManager.getConnection("jdbc:ucanaccess://C:/Users/Alessandro/Informations.accdb");
                pst = connection.prepareStatement("insert into RegisteredData(name, baranggay, age, sex, agecat)values(?,?,?,?,?)");
                
                
        
                pst.setString(1, resident.getName());
                pst.setString(2, resident.getBaranggay());
                pst.setInt(3, resident.getAge());
                
                if(resident.getAge() <= 12){
                resident.setAgeCategory("Kid");
                }
                else if(resident.getAge() > 12 && resident.getAge() <= 17 ){
                    resident.setAgeCategory("Teen");
                }
                else if(resident.getAge() >= 18 && resident.getAge() <= 59 ){
                    resident.setAgeCategory("Adult");
                } else  resident.setAgeCategory("Senior");
                
               
                pst.setString(4, resident.getSex());
                pst.setString(5, resident.getAgeCategory());
                pst.execute();

                clear();
         
                updateTable();
                JOptionPane.showMessageDialog(this,"The information was added");

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this,ex);

            } catch (SQLException ex) {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this,ex);
                System.out.println(ex);
            }
       }
    }//GEN-LAST:event_btn_AddActionPerformed

    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed
        DefaultTableModel model = (DefaultTableModel)tbl_Data.getModel();
        int selectedIndex = tbl_Data.getSelectedRow();
        int id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());
        
        String sex;
        
        resident.setName(txtf_FullName.getText());
        int selectedIndexx = cmb_Sex.getSelectedIndex();
        sex = (String) cmb_Sex.getModel().getElementAt(selectedIndexx);
        resident.setSex(sex);
        resident.setBaranggay(txtf_Purok.getText());
        resident.setAge(parseInt(txtf_Age.getText()));
        
        if(resident.getAge() <= 12){
            resident.setAgeCategory("Kid");
        }
        else if(resident.getAge() > 12 && resident.getAge() <= 17 ){
            resident.setAgeCategory("Teen");
        }
        else if(resident.getAge() >= 18 && resident.getAge() <= 59 ){
            resident.setAgeCategory("Adult");
        } else resident.setAgeCategory("Senior");
        
        try {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            
            connection = DriverManager.getConnection("jdbc:ucanaccess://C:/Users/Alessandro/Informations.accdb");
            pst = connection.prepareStatement("update RegisteredData set name=?, baranggay=?, age=?, sex=?, agecat=? where id=?");
            pst.setString(1, resident.getName());
            pst.setString(2, resident.getBaranggay());
            pst.setInt(3, resident.getAge());
            pst.setString(4, resident.getSex());
            pst.setString(5, resident.getAgeCategory());
            pst.setInt(6, id);
            pst.executeUpdate();
            
            clear();
            
            updateTable();
            JOptionPane.showMessageDialog(this,"The information was updated successfully.");
         
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,ex);
             
        } catch (SQLException ex) {
            Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,ex);
            System.out.println(ex);
        }
    }//GEN-LAST:event_btn_UpdateActionPerformed

    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed
        DefaultTableModel model = (DefaultTableModel)tbl_Data.getModel();
        int selectedIndex = tbl_Data.getSelectedRow();
        int id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());
        int dialogResult = JOptionPane.showConfirmDialog(null, "Deleting this information will no longer be taken back, are you sure about this action?", "Warning",JOptionPane.YES_NO_OPTION);
        
        
        if(dialogResult == JOptionPane.YES_NO_OPTION){
            
            try {
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
                connection = DriverManager.getConnection("jdbc:ucanaccess://C:/Users/Alessandro/Informations.accdb");
                pst = connection.prepareStatement("delete from RegisteredData where id = ?");
                pst.setInt(1, id);
                pst.executeUpdate();
                updateTable();
                JOptionPane.showMessageDialog(this,"The informatiom has been successfully deleted.");

                addToNextTable();

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
    }//GEN-LAST:event_btn_DeleteActionPerformed
    public void addToNextTable(){
        String sex;
        
        resident.setName(txtf_FullName.getText());
        int selectedIndex = cmb_Sex.getSelectedIndex();
        sex = (String) cmb_Sex.getModel().getElementAt(selectedIndex);
        resident.setSex(sex);
        resident.setBaranggay(txtf_Purok.getText());
        resident.setAge(parseInt(txtf_Age.getText()));
        
        try {
                 
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");

                connection = DriverManager.getConnection("jdbc:ucanaccess://C:/Users/Alessandro/Informations.accdb");
                pst = connection.prepareStatement("insert into Archive(name, baranggay, age, sex, agecat)values(?,?,?,?,?)");
                
                
        
                pst.setString(1, resident.getName());
                pst.setString(2, resident.getBaranggay());
                pst.setInt(3, resident.getAge());
                
                if(resident.getAge() <= 12){
                resident.setAgeCategory("Kid");
                }
                else if(resident.getAge() > 12 && resident.getAge() <= 17 ){
                    resident.setAgeCategory("Teen");
                }
                else if(resident.getAge() >= 18 && resident.getAge() <= 59 ){
                    resident.setAgeCategory("Adult");
                } else  resident.setAgeCategory("Senior");
                
               
                pst.setString(4, resident.getSex());
                pst.setString(5, resident.getAgeCategory());
                pst.execute();

                clear();
        
                JOptionPane.showMessageDialog(this,"The information was added to deceased record");

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this,ex);

            } catch (SQLException ex) {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this,ex);
                System.out.println(ex);
            }
    }
    public void checkPersonIfExist(){
        try {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            Connection connection = DriverManager.getConnection("jdbc:ucanaccess://C:/Users/Alessandro/Informations.accdb");
            String query = "SELECT name FROM RegisteredData";
            
            Statement stmt = connection.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            
            while (rs.next()) {
                String columnValue = rs.getString("name");
                
                if(columnValue.equalsIgnoreCase(txtf_FullName.getText())){
                    setDoesExist(true);
                    break;
                    
                } else setDoesExist(false);
            }
            
          } catch (ClassNotFoundException ex) {
            Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(this,ex);
             
        } catch (SQLException ex) {
            Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,ex);
            System.out.println(ex);
        }
        
        
}    
    public void setDoesExist(boolean e){
        exist = e;
    }
    public boolean doesExist(){
        return exist;
    }
    private void tbl_DataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_DataMouseClicked
        DefaultTableModel model = (DefaultTableModel)tbl_Data.getModel();
        int selectedIndex = tbl_Data.getSelectedRow();
        
        txtf_FullName.setText(model.getValueAt(selectedIndex, 1).toString());
        txtf_Purok.setText(model.getValueAt(selectedIndex, 2).toString());
        txtf_Age.setText(model.getValueAt(selectedIndex, 3).toString());
    }//GEN-LAST:event_tbl_DataMouseClicked

    private void txtf_PurokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtf_PurokActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtf_PurokActionPerformed

    private void txtf_FullNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtf_FullNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtf_FullNameActionPerformed

    private void cmb_SexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_SexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_SexActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_Update;
    private javax.swing.JComboBox<String> cmb_Sex;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_Age;
    private javax.swing.JLabel lbl_FullName;
    private javax.swing.JLabel lbl_Purok;
    private javax.swing.JLabel lbl_Sex;
    private javax.swing.JTable tbl_Data;
    private javax.swing.JTextField txtf_Age;
    private javax.swing.JTextField txtf_FullName;
    private javax.swing.JTextField txtf_Purok;
    // End of variables declaration//GEN-END:variables
}
